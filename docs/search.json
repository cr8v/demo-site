[
  {
    "objectID": "tables.html",
    "href": "tables.html",
    "title": "Tables Overview",
    "section": "",
    "text": "The SALUS healthcare research database consists of the following core tables:\n\n\n\nDescription: Contains patient demographic information\nKey Fields: Patient ID, Sex, Date of Birth\nRecord Count: 3466137\n\n\nquarto_tables$table_participants %&gt;% \n  head(5) %&gt;% select(-BRTHDD) %&gt;%\n  reactable()\n\n\n\n\n\n\n\n\n\nDescription: Tracks all healthcare visit encounters\nKey Fields: Patient ID, Date of Visit, Count of Visit\nRecord Count: ##,### records\n\n\n\n\n\nDescription: Contains patient-reported outcomes and survey responses\nPrimary Key: survey_id\nRecord Count: 25,000 records\nKey Fields: Survey type, responses, completion dates, scores\n\n\n\n\n\nDescription: Stores clinical measurements and vital signs\nPrimary Key: measure_id\nRecord Count: 100,000 records\nKey Fields: Vital signs, BMI, blood pressure, temperature\n\n\n\n\n\nDescription: Records laboratory test results and diagnostics\nPrimary Key: lab_id\nRecord Count: 75,000 records\nKey Fields: Test types, results, reference ranges, collection dates\n\n\n\n\n\nDescription: Contains healthcare provider information\nPrimary Key: doctor_id\nRecord Count: 500 records\nKey Fields: Specialties, credentials, departments, contact details\n\nEach table is carefully structured to maintain referential integrity while capturing comprehensive healthcare data. The tables are interconnected through foreign key relationships to enable complex queries and analysis."
  },
  {
    "objectID": "tables.html#database-structure",
    "href": "tables.html#database-structure",
    "title": "Tables Overview",
    "section": "",
    "text": "The SALUS healthcare research database consists of the following core tables:\n\n\n\nDescription: Contains patient demographic information\nKey Fields: Patient ID, Sex, Date of Birth\nRecord Count: 3466137\n\n\nquarto_tables$table_participants %&gt;% \n  head(5) %&gt;% select(-BRTHDD) %&gt;%\n  reactable()\n\n\n\n\n\n\n\n\n\nDescription: Tracks all healthcare visit encounters\nKey Fields: Patient ID, Date of Visit, Count of Visit\nRecord Count: ##,### records\n\n\n\n\n\nDescription: Contains patient-reported outcomes and survey responses\nPrimary Key: survey_id\nRecord Count: 25,000 records\nKey Fields: Survey type, responses, completion dates, scores\n\n\n\n\n\nDescription: Stores clinical measurements and vital signs\nPrimary Key: measure_id\nRecord Count: 100,000 records\nKey Fields: Vital signs, BMI, blood pressure, temperature\n\n\n\n\n\nDescription: Records laboratory test results and diagnostics\nPrimary Key: lab_id\nRecord Count: 75,000 records\nKey Fields: Test types, results, reference ranges, collection dates\n\n\n\n\n\nDescription: Contains healthcare provider information\nPrimary Key: doctor_id\nRecord Count: 500 records\nKey Fields: Specialties, credentials, departments, contact details\n\nEach table is carefully structured to maintain referential integrity while capturing comprehensive healthcare data. The tables are interconnected through foreign key relationships to enable complex queries and analysis."
  },
  {
    "objectID": "variables.html",
    "href": "variables.html",
    "title": "Variables Dictionary",
    "section": "",
    "text": "Variable\nType\nDescription\nValues\n\n\n\n\npatient_id\nINT\nUnique identifier for each patient\nNumeric, auto-incrementing\n\n\nage\nINT\nPatient age in years at time of registration\n0-120\n\n\ngender\nVARCHAR(1)\nPatient’s biological sex at birth\n‘M’ = Male, ‘F’ = Female\n\n\nbirth_date\nDATE\nPatient’s date of birth\nYYYY-MM-DD format\n\n\nrace\nVARCHAR(50)\nPatient’s self-reported race/ethnicity\nWhite, Black, Asian, Hispanic, Other\n\n\ninsurance\nVARCHAR(50)\nPrimary insurance type\nMedicare, Medicaid, Private, Self-pay\n\n\nzip_code\nVARCHAR(5)\nPatient’s residential ZIP code\n5-digit US postal code\n\n\nmarital_status\nVARCHAR(20)\nPatient’s marital status\nSingle, Married, Divorced, Widowed\n\n\nlanguage\nVARCHAR(50)\nPatient’s primary language\nEnglish, Spanish, Other\n\n\nemployment\nVARCHAR(50)\nEmployment status\nEmployed, Unemployed, Retired, Student\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nVariable\nType\nDescription\nValues\n\n\n\n\nvisit_id\nINT\nUnique identifier for each visit\nNumeric, auto-incrementing\n\n\npatient_id\nINT\nForeign key linking to patients table\nReferences patient_id\n\n\nvisit_date\nDATE\nDate of healthcare encounter\nYYYY-MM-DD format\n\n\nvisit_type\nVARCHAR(50)\nCategory of healthcare visit\nOutpatient, Emergency, Inpatient\n\n\nprovider_id\nINT\nID of primary care provider\nReferences providers table\n\n\nfacility_id\nINT\nLocation where care was provided\nReferences facilities table\n\n\nadmission_date\nDATE\nStart date for inpatient stays\nYYYY-MM-DD format\n\n\ndischarge_date\nDATE\nEnd date for inpatient stays\nYYYY-MM-DD format\n\n\nlength_of_stay\nINT\nDays spent in hospital\nNumeric (days)\n\n\ndischarge_disposition\nVARCHAR(50)\nDischarge status/location\nHome, SNF, Rehab, Expired\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nVariable\nType\nDescription\nValues\n\n\n\n\ndiagnosis_id\nINT\nUnique identifier for diagnosis\nNumeric, auto-incrementing\n\n\nvisit_id\nINT\nForeign key linking to visits\nReferences visit_id\n\n\nicd_code\nVARCHAR(10)\nICD-10 diagnosis code\nValid ICD-10 code\n\n\ndiagnosis_date\nDATE\nDate diagnosis was recorded\nYYYY-MM-DD format\n\n\nprimary_dx\nBOOLEAN\nIndicates if primary diagnosis\nTRUE/FALSE\n\n\nchronic_flag\nBOOLEAN\nIndicates chronic condition\nTRUE/FALSE\n\n\nseverity\nINT\nSeverity score of condition\n1-5 scale\n\n\nonset_date\nDATE\nWhen symptoms first appeared\nYYYY-MM-DD format\n\n\nresolved_date\nDATE\nWhen condition resolved\nYYYY-MM-DD format\n\n\nnotes\nTEXT\nClinical notes about diagnosis\nFree text\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nVariable\nType\nDescription\nValues\n\n\n\n\nmed_id\nINT\nUnique identifier for prescription\nNumeric, auto-incrementing\n\n\npatient_id\nINT\nForeign key linking to patients\nReferences patient_id\n\n\ndrug_name\nVARCHAR(100)\nGeneric medication name\nStandard drug names\n\n\ndosage\nVARCHAR(50)\nPrescribed medication dose\nIncludes unit (mg, mcg, etc)\n\n\nfrequency\nVARCHAR(50)\nHow often medication taken\nQD, BID, TID, PRN, etc\n\n\nstart_date\nDATE\nWhen prescription started\nYYYY-MM-DD format\n\n\nend_date\nDATE\nWhen prescription ended\nYYYY-MM-DD format\n\n\nactive\nBOOLEAN\nCurrent prescription status\nTRUE/FALSE\n\n\nprescriber_id\nINT\nProvider who prescribed med\nReferences providers table\n\n\npharmacy_id\nINT\nDispensing pharmacy\nReferences pharmacies table\n\n\nrefills\nINT\nNumber of refills remaining\n0-99\n\n\nlast_filled\nDATE\nDate of last dispensing\nYYYY-MM-DD format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nVariable\nType\nDescription\nValues\n\n\n\n\nlab_id\nINT\nUnique identifier for lab result\nNumeric, auto-incrementing\n\n\npatient_id\nINT\nForeign key linking to patients\nReferences patient_id\n\n\ntest_name\nVARCHAR(100)\nName of laboratory test\nStandard lab test names\n\n\nresult_value\nVARCHAR(50)\nNumeric or categorical result\nDepends on test type\n\n\nunits\nVARCHAR(20)\nUnits of measurement\nmg/dL, mmol/L, etc\n\n\nref_range_low\nFLOAT\nLower limit of normal range\nNumeric value\n\n\nref_range_high\nFLOAT\nUpper limit of normal range\nNumeric value\n\n\ncollection_date\nDATE\nWhen sample was collected\nYYYY-MM-DD format\n\n\nresult_date\nDATE\nWhen results were available\nYYYY-MM-DD format\n\n\nabnormal_flag\nVARCHAR(1)\nResult normality indicator\n‘H’=High, ‘L’=Low, ‘N’=Normal\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nVariable\nType\nDescription\nValues\n\n\n\n\nvital_id\nINT\nUnique identifier for vital signs\nNumeric, auto-incrementing\n\n\nvisit_id\nINT\nForeign key linking to visits\nReferences visit_id\n\n\nmeasure_date\nDATE\nWhen vitals were recorded\nYYYY-MM-DD format\n\n\ntemperature\nFLOAT\nBody temperature\nFahrenheit\n\n\nheart_rate\nINT\nHeart rate\nBeats per minute\n\n\nblood_pressure_sys\nINT\nSystolic blood pressure\nmmHg\n\n\nblood_pressure_dia\nINT\nDiastolic blood pressure\nmmHg\n\n\nrespiratory_rate\nINT\nBreathing rate\nBreaths per minute\n\n\noxygen_saturation\nINT\nBlood oxygen level\nPercentage (0-100)\n\n\nheight\nFLOAT\nPatient height\nInches\n\n\nweight\nFLOAT\nPatient weight\nPounds\n\n\nbmi\nFLOAT\nBody Mass Index\nCalculated from height/weight"
  },
  {
    "objectID": "variables.html#data-dictionary",
    "href": "variables.html#data-dictionary",
    "title": "Variables Dictionary",
    "section": "",
    "text": "Variable\nType\nDescription\nValues\n\n\n\n\npatient_id\nINT\nUnique identifier for each patient\nNumeric, auto-incrementing\n\n\nage\nINT\nPatient age in years at time of registration\n0-120\n\n\ngender\nVARCHAR(1)\nPatient’s biological sex at birth\n‘M’ = Male, ‘F’ = Female\n\n\nbirth_date\nDATE\nPatient’s date of birth\nYYYY-MM-DD format\n\n\nrace\nVARCHAR(50)\nPatient’s self-reported race/ethnicity\nWhite, Black, Asian, Hispanic, Other\n\n\ninsurance\nVARCHAR(50)\nPrimary insurance type\nMedicare, Medicaid, Private, Self-pay\n\n\nzip_code\nVARCHAR(5)\nPatient’s residential ZIP code\n5-digit US postal code\n\n\nmarital_status\nVARCHAR(20)\nPatient’s marital status\nSingle, Married, Divorced, Widowed\n\n\nlanguage\nVARCHAR(50)\nPatient’s primary language\nEnglish, Spanish, Other\n\n\nemployment\nVARCHAR(50)\nEmployment status\nEmployed, Unemployed, Retired, Student\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nVariable\nType\nDescription\nValues\n\n\n\n\nvisit_id\nINT\nUnique identifier for each visit\nNumeric, auto-incrementing\n\n\npatient_id\nINT\nForeign key linking to patients table\nReferences patient_id\n\n\nvisit_date\nDATE\nDate of healthcare encounter\nYYYY-MM-DD format\n\n\nvisit_type\nVARCHAR(50)\nCategory of healthcare visit\nOutpatient, Emergency, Inpatient\n\n\nprovider_id\nINT\nID of primary care provider\nReferences providers table\n\n\nfacility_id\nINT\nLocation where care was provided\nReferences facilities table\n\n\nadmission_date\nDATE\nStart date for inpatient stays\nYYYY-MM-DD format\n\n\ndischarge_date\nDATE\nEnd date for inpatient stays\nYYYY-MM-DD format\n\n\nlength_of_stay\nINT\nDays spent in hospital\nNumeric (days)\n\n\ndischarge_disposition\nVARCHAR(50)\nDischarge status/location\nHome, SNF, Rehab, Expired\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nVariable\nType\nDescription\nValues\n\n\n\n\ndiagnosis_id\nINT\nUnique identifier for diagnosis\nNumeric, auto-incrementing\n\n\nvisit_id\nINT\nForeign key linking to visits\nReferences visit_id\n\n\nicd_code\nVARCHAR(10)\nICD-10 diagnosis code\nValid ICD-10 code\n\n\ndiagnosis_date\nDATE\nDate diagnosis was recorded\nYYYY-MM-DD format\n\n\nprimary_dx\nBOOLEAN\nIndicates if primary diagnosis\nTRUE/FALSE\n\n\nchronic_flag\nBOOLEAN\nIndicates chronic condition\nTRUE/FALSE\n\n\nseverity\nINT\nSeverity score of condition\n1-5 scale\n\n\nonset_date\nDATE\nWhen symptoms first appeared\nYYYY-MM-DD format\n\n\nresolved_date\nDATE\nWhen condition resolved\nYYYY-MM-DD format\n\n\nnotes\nTEXT\nClinical notes about diagnosis\nFree text\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nVariable\nType\nDescription\nValues\n\n\n\n\nmed_id\nINT\nUnique identifier for prescription\nNumeric, auto-incrementing\n\n\npatient_id\nINT\nForeign key linking to patients\nReferences patient_id\n\n\ndrug_name\nVARCHAR(100)\nGeneric medication name\nStandard drug names\n\n\ndosage\nVARCHAR(50)\nPrescribed medication dose\nIncludes unit (mg, mcg, etc)\n\n\nfrequency\nVARCHAR(50)\nHow often medication taken\nQD, BID, TID, PRN, etc\n\n\nstart_date\nDATE\nWhen prescription started\nYYYY-MM-DD format\n\n\nend_date\nDATE\nWhen prescription ended\nYYYY-MM-DD format\n\n\nactive\nBOOLEAN\nCurrent prescription status\nTRUE/FALSE\n\n\nprescriber_id\nINT\nProvider who prescribed med\nReferences providers table\n\n\npharmacy_id\nINT\nDispensing pharmacy\nReferences pharmacies table\n\n\nrefills\nINT\nNumber of refills remaining\n0-99\n\n\nlast_filled\nDATE\nDate of last dispensing\nYYYY-MM-DD format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nVariable\nType\nDescription\nValues\n\n\n\n\nlab_id\nINT\nUnique identifier for lab result\nNumeric, auto-incrementing\n\n\npatient_id\nINT\nForeign key linking to patients\nReferences patient_id\n\n\ntest_name\nVARCHAR(100)\nName of laboratory test\nStandard lab test names\n\n\nresult_value\nVARCHAR(50)\nNumeric or categorical result\nDepends on test type\n\n\nunits\nVARCHAR(20)\nUnits of measurement\nmg/dL, mmol/L, etc\n\n\nref_range_low\nFLOAT\nLower limit of normal range\nNumeric value\n\n\nref_range_high\nFLOAT\nUpper limit of normal range\nNumeric value\n\n\ncollection_date\nDATE\nWhen sample was collected\nYYYY-MM-DD format\n\n\nresult_date\nDATE\nWhen results were available\nYYYY-MM-DD format\n\n\nabnormal_flag\nVARCHAR(1)\nResult normality indicator\n‘H’=High, ‘L’=Low, ‘N’=Normal\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nVariable\nType\nDescription\nValues\n\n\n\n\nvital_id\nINT\nUnique identifier for vital signs\nNumeric, auto-incrementing\n\n\nvisit_id\nINT\nForeign key linking to visits\nReferences visit_id\n\n\nmeasure_date\nDATE\nWhen vitals were recorded\nYYYY-MM-DD format\n\n\ntemperature\nFLOAT\nBody temperature\nFahrenheit\n\n\nheart_rate\nINT\nHeart rate\nBeats per minute\n\n\nblood_pressure_sys\nINT\nSystolic blood pressure\nmmHg\n\n\nblood_pressure_dia\nINT\nDiastolic blood pressure\nmmHg\n\n\nrespiratory_rate\nINT\nBreathing rate\nBreaths per minute\n\n\noxygen_saturation\nINT\nBlood oxygen level\nPercentage (0-100)\n\n\nheight\nFLOAT\nPatient height\nInches\n\n\nweight\nFLOAT\nPatient weight\nPounds\n\n\nbmi\nFLOAT\nBody Mass Index\nCalculated from height/weight"
  },
  {
    "objectID": "guidelines.html",
    "href": "guidelines.html",
    "title": "Documentation",
    "section": "",
    "text": "Institutional Review Board (IRB) approval is required before any data access can be granted\nA signed Data Use Agreement (DUA) must be completed and approved by SALUS Research\nAll users must complete HIPAA compliance training and database security certification\nAnnual renewal of certifications and agreements required\n\n\n\n\n\nAll data is encrypted at rest using AES-256 encryption\nAccess logs are maintained for all database queries and data exports\nMulti-factor authentication required for database access\nIP address restrictions and access controls implemented\nRegular security audits and penetration testing performed\nData cannot be downloaded or stored on local machines\nAll analysis must be performed in secure computing environment\n\n\n\n\n\nSubmit IRB protocol and approval letter\nComplete HIPAA and security training modules\nSign and submit Data Use Agreement\nRequest database credentials\nComplete user orientation\nReceive access approval\n\n\n\n\n\nAll publications must acknowledge SALUS Research Database\nResults must be reviewed for privacy before publication\nNo attempts to re-identify subjects\nReport any security concerns immediately\nMaintain data access logs\nFollow data retention policies\n\n\n\n\n\nUse approved statistical software only\nDocument all data cleaning steps\nSave analysis code and workflows\nFollow standardized variable definitions\nValidate results with sample datasets first\nConsider statistical power requirements\n\n\n\n\nContact us for:\n\nTechnical support and troubleshooting\nAccess requests and credential issues\nData questions and clarification\nVariable definitions and coding\nAnalysis consultation\nSecurity incident reporting\nTraining registration\n\n\n\n\n\nRegular audits of user activity\nAnnual compliance reviews\nUpdate requirements as needed\nViolation reporting process\nAccess suspension procedures"
  },
  {
    "objectID": "guidelines.html#usage-guidelines",
    "href": "guidelines.html#usage-guidelines",
    "title": "Documentation",
    "section": "",
    "text": "Institutional Review Board (IRB) approval is required before any data access can be granted\nA signed Data Use Agreement (DUA) must be completed and approved by SALUS Research\nAll users must complete HIPAA compliance training and database security certification\nAnnual renewal of certifications and agreements required\n\n\n\n\n\nAll data is encrypted at rest using AES-256 encryption\nAccess logs are maintained for all database queries and data exports\nMulti-factor authentication required for database access\nIP address restrictions and access controls implemented\nRegular security audits and penetration testing performed\nData cannot be downloaded or stored on local machines\nAll analysis must be performed in secure computing environment\n\n\n\n\n\nSubmit IRB protocol and approval letter\nComplete HIPAA and security training modules\nSign and submit Data Use Agreement\nRequest database credentials\nComplete user orientation\nReceive access approval\n\n\n\n\n\nAll publications must acknowledge SALUS Research Database\nResults must be reviewed for privacy before publication\nNo attempts to re-identify subjects\nReport any security concerns immediately\nMaintain data access logs\nFollow data retention policies\n\n\n\n\n\nUse approved statistical software only\nDocument all data cleaning steps\nSave analysis code and workflows\nFollow standardized variable definitions\nValidate results with sample datasets first\nConsider statistical power requirements\n\n\n\n\nContact us for:\n\nTechnical support and troubleshooting\nAccess requests and credential issues\nData questions and clarification\nVariable definitions and coding\nAnalysis consultation\nSecurity incident reporting\nTraining registration\n\n\n\n\n\nRegular audits of user activity\nAnnual compliance reviews\nUpdate requirements as needed\nViolation reporting process\nAccess suspension procedures"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "SALUS CATALOG",
    "section": "",
    "text": "This catalog provides comprehensive documentation for the SALUS healthcare research database, containing over millions of health screening records across 9 years of multiple integrated tables.\n\n\n\nComprehensive patient demographics and clinical data\nLongitudinal healthcare visits and outcomes\nPatient-reported survey responses\nClinical measurements and vital signs\nLaboratory results and diagnostics\nHealthcare provider information\n\n\n\n\n\n\n\nQuick Navigation\n\n\n\n\nCheck Tables Overview for database structure and table relationships\nBrowse Variables for detailed field descriptions\nReview Usage Guidelines for access requirements and security protocols\nLearn about our Data Cleaning Process and quality standards\n\n\n\n\n\n\n\n\n\nAccess Requirements\n\n\n\n\nIRB approval required\nHIPAA compliance training\nSigned Data Use Agreement\nSecurity certification See Usage Guidelines for complete requirements."
  },
  {
    "objectID": "index.html#welcome-to-salus-research-database",
    "href": "index.html#welcome-to-salus-research-database",
    "title": "SALUS CATALOG",
    "section": "",
    "text": "This catalog provides comprehensive documentation for the SALUS healthcare research database, containing over millions of health screening records across 9 years of multiple integrated tables.\n\n\n\nComprehensive patient demographics and clinical data\nLongitudinal healthcare visits and outcomes\nPatient-reported survey responses\nClinical measurements and vital signs\nLaboratory results and diagnostics\nHealthcare provider information\n\n\n\n\n\n\n\nQuick Navigation\n\n\n\n\nCheck Tables Overview for database structure and table relationships\nBrowse Variables for detailed field descriptions\nReview Usage Guidelines for access requirements and security protocols\nLearn about our Data Cleaning Process and quality standards\n\n\n\n\n\n\n\n\n\nAccess Requirements\n\n\n\n\nIRB approval required\nHIPAA compliance training\nSigned Data Use Agreement\nSecurity certification See Usage Guidelines for complete requirements."
  },
  {
    "objectID": "cleaning.html",
    "href": "cleaning.html",
    "title": "Data Cleaning Process",
    "section": "",
    "text": "Review data completeness and quality metrics\nGenerate summary statistics for all variables\nIdentify missing or incomplete records\nFlag potential data quality issues\nDocument initial state of dataset\n\n\n\n\n\nStandardization\n\nConvert all dates to YYYY-MM-DD format\nStandardize text case (upper/lower) as appropriate\nNormalize units of measurement\nApply consistent coding schemes\n\nMissing Data Handling\n\nFlag missing values\nAssess patterns of missingness\nApply appropriate imputation where valid\nDocument all missing data decisions\n\nOutlier Detection\n\nCalculate statistical bounds for numeric variables\nFlag biological impossibilities\nReview extreme values\nDocument outlier handling decisions\n\nDeduplication\n\nIdentify potential duplicate records\nCompare record pairs\nMerge or remove duplicates\nMaintain audit trail of changes\n\n\n\n\n\n\nExpert Review\n\nClinical review of flagged values\nAssessment of unusual patterns\nValidation of automated decisions\nDocumentation of override reasons\n\nQuality Checks\n\nCross-reference with source data\nVerify referential integrity\nValidate derived variables\nCheck logical consistency\n\n\n\n\n\nEach cleaning step must include:\n\nDescription of issue addressed\nMethodology used\nNumber of records affected\nBefore/after comparisons\nJustification for changes\nSQL or code snippets used\nReviewer sign-off\n\n\n\n\n\nTechnical Validation\n\nRun automated test suites\nVerify data types and formats\nCheck constraint compliance\nValidate calculations\n\nClinical Validation\n\nReview by subject matter experts\nCheck clinical plausibility\nVerify coding accuracy\nValidate derived measures\n\n\n\n\n\n\nGenerate final quality metrics\nProduce validation reports\nDocument all cleaning steps\nArchive original and cleaned datasets\nCreate reproducible cleaning workflow\n\n\n\n\n\nRegular quality monitoring\nPeriodic data audits\nUpdate cleaning procedures\nMaintain cleaning documentation\nTrack data quality metrics\n\n\n\n\nAll cleaned data must meet:\n\n99.9% completeness for required fields\n100% referential integrity\nNo invalid codes or values\nFull documentation of changes\nReproducible cleaning process\n\n\n\n\n\nCustom SQL cleaning scripts\nStatistical analysis software\nData validation tools\nDocumentation templates\nQuality control checklists"
  },
  {
    "objectID": "cleaning.html#standard-cleaning-procedures",
    "href": "cleaning.html#standard-cleaning-procedures",
    "title": "Data Cleaning Process",
    "section": "",
    "text": "Review data completeness and quality metrics\nGenerate summary statistics for all variables\nIdentify missing or incomplete records\nFlag potential data quality issues\nDocument initial state of dataset\n\n\n\n\n\nStandardization\n\nConvert all dates to YYYY-MM-DD format\nStandardize text case (upper/lower) as appropriate\nNormalize units of measurement\nApply consistent coding schemes\n\nMissing Data Handling\n\nFlag missing values\nAssess patterns of missingness\nApply appropriate imputation where valid\nDocument all missing data decisions\n\nOutlier Detection\n\nCalculate statistical bounds for numeric variables\nFlag biological impossibilities\nReview extreme values\nDocument outlier handling decisions\n\nDeduplication\n\nIdentify potential duplicate records\nCompare record pairs\nMerge or remove duplicates\nMaintain audit trail of changes\n\n\n\n\n\n\nExpert Review\n\nClinical review of flagged values\nAssessment of unusual patterns\nValidation of automated decisions\nDocumentation of override reasons\n\nQuality Checks\n\nCross-reference with source data\nVerify referential integrity\nValidate derived variables\nCheck logical consistency\n\n\n\n\n\nEach cleaning step must include:\n\nDescription of issue addressed\nMethodology used\nNumber of records affected\nBefore/after comparisons\nJustification for changes\nSQL or code snippets used\nReviewer sign-off\n\n\n\n\n\nTechnical Validation\n\nRun automated test suites\nVerify data types and formats\nCheck constraint compliance\nValidate calculations\n\nClinical Validation\n\nReview by subject matter experts\nCheck clinical plausibility\nVerify coding accuracy\nValidate derived measures\n\n\n\n\n\n\nGenerate final quality metrics\nProduce validation reports\nDocument all cleaning steps\nArchive original and cleaned datasets\nCreate reproducible cleaning workflow\n\n\n\n\n\nRegular quality monitoring\nPeriodic data audits\nUpdate cleaning procedures\nMaintain cleaning documentation\nTrack data quality metrics\n\n\n\n\nAll cleaned data must meet:\n\n99.9% completeness for required fields\n100% referential integrity\nNo invalid codes or values\nFull documentation of changes\nReproducible cleaning process\n\n\n\n\n\nCustom SQL cleaning scripts\nStatistical analysis software\nData validation tools\nDocumentation templates\nQuality control checklists"
  },
  {
    "objectID": "cleaning.html#data-files-overview",
    "href": "cleaning.html#data-files-overview",
    "title": "Data Cleaning Process",
    "section": "Data Files Overview",
    "text": "Data Files Overview\n\nData Dictionary\nThe dataset contains several key variable categories:\n\nDiagnosis Variables\n\nIncludes diagnosis codes, dates, severity\nLinks to visits through visit_id\nTracks chronic conditions and resolution\n\nMedication Variables\n\nPrescription details and status\nDosage, frequency, dates\nPharmacy and prescriber tracking\n\nLab Results\n\nTest results with reference ranges\nCollection and result dates\nAbnormality flagging\n\nVital Signs\n\nStandard clinical measurements\nHeight, weight, BMI\nCardiovascular and respiratory metrics\n\n\nSee the full data dictionary for detailed variable specifications.\n\n\n\n\n\n\nFile Categories\n\n\n\n\nAINQ: Inquiry data files\nRSLT: Results data files\nJUDD: Judgment data files\n\n\n\n\n\n\n\n\n\n📌 Created 64 file sets\n\n\n\n\nCode\nquarto_tables &lt;- readRDS(sprintf(\"%sdata/processed/_objects/_rds/quarto_tables.rds\", rootdir))\nquarto_tables$table_participants %&gt;% \n  filter(is.na(DATE_BIRTH)) %&gt;% \n  mutate(DATE_BIRTH = paste0(substr(BRTHDD, 1, 4), \"-\", substr(BRTHDD, 5, 6), \"-\", substr(BRTHDD, 7, 8))) %&gt;%\n  mutate(YEAR = substr(BRTHDD, 1, 4),\n         MONTH = substr(BRTHDD, 5, 6),\n         DAY = substr(BRTHDD, 7, 8),\n         FLAG_BIRTH = \"INVALID DATE\") %&gt;%\n  select(FLAG_BIRTH, everything(), -BRTHDD, -SEX) %&gt;%\n  reactable(\n    searchable = TRUE,\n    filterable = TRUE,\n    showPageSizeOptions = TRUE,\n    pageSizeOptions = c(10, 20, 50),\n    defaultPageSize = 10,\n    striped = TRUE,\n    highlight = TRUE,\n    bordered = TRUE,\n    defaultColDef = colDef(\n      align = \"left\",\n      minWidth = 120,\n      headerStyle = list(background = \"#f7f7f8\")\n    ),\n    columns = list(\n      FLAG_BIRTH = colDef(\n        name = \"Flag\",\n        style = list(fontWeight = \"bold\")\n      ),\n      DATE_BIRTH = colDef(\n        name = \"Birth Date\",\n        style = list(color = \"#2c3e50\")\n      ),\n      YEAR = colDef(\n        name = \"Year\",\n        style = list(color = \"#2c3e50\")\n      ),\n      MONTH = colDef(\n        name = \"Month\",\n        style = list(color = \"#2c3e50\")\n      ),\n      DAY = colDef(\n        name = \"Day\",\n        style = list(color = \"#2c3e50\")\n      )\n    ),\n    theme = reactableTheme(\n      borderColor = \"#dfe2e5\",\n      stripedColor = \"#f6f8fa\",\n      headerStyle = list(\n        backgroundColor = \"#f8f9fa\",\n        color = \"#1a162d\",\n        fontWeight = \"bold\",\n        borderColor = \"#dfe2e5\"\n      ),\n      cellStyle = list(\n        padding = \"8px 12px\"\n      )\n    )\n  )\n\n\n\n\n\n\nCode\ncat(\"📌 Found\", nrow(quarto_tables$table_participants %&gt;% filter(is.na(DATE_BIRTH))), \"participants with invalid birth dates\\n\")\n\n\n📌 Found 83 participants with invalid birth dates\n\n\n\n\nCode\nquarto_tables$table_participants %&gt;% \n  filter(lubridate::year(DATE_BIRTH) &lt; 1925 | lubridate::year(DATE_BIRTH) &gt; 2014) %&gt;%\n  mutate(DATE_BIRTH = paste0(substr(BRTHDD, 1, 4), \"-\", substr(BRTHDD, 5, 6), \"-\", substr(BRTHDD, 7, 8))) %&gt;%\n  mutate(CURRENT_AGE = round(as.numeric(difftime(Sys.Date(), DATE_BIRTH, units = \"days\")) / 365.25),\n         FLAG_BIRTH = case_when(\n           CURRENT_AGE &lt; 0 ~ \"IMPOSSIBLE\",\n           CURRENT_AGE &gt; 80 ~ \"TOO OLD\",\n           CURRENT_AGE &lt; 18 ~ \"TOO YOUNG\",\n           TRUE ~ NA_character_)) %&gt;%\n  select(FLAG_BIRTH, everything(), -BRTHDD, -SEX) %&gt;%\n  reactable(\n    searchable = TRUE,\n    filterable = TRUE,\n    showPageSizeOptions = TRUE,\n    pageSizeOptions = c(10, 20, 50),\n    defaultPageSize = 10,\n    striped = TRUE,\n    highlight = TRUE,\n    bordered = TRUE,\n    defaultColDef = colDef(\n      align = \"left\",\n      minWidth = 120,\n      headerStyle = list(background = \"#f7f7f8\")\n    ),\n    columns = list(\n      CURRENT_AGE = colDef(\n        name = \"Current Age\",\n        sortable = TRUE\n      ),\n      FLAG_BIRTH = colDef(\n        name = \"Flag\",\n        style = list(fontWeight = \"bold\")\n      )\n    ),\n    defaultSorted = list(\"CURRENT_AGE\" = \"desc\"),\n    groupBy = \"FLAG_BIRTH\",\n    theme = reactableTheme(\n      borderColor = \"#dfe2e5\",\n      stripedColor = \"#f6f8fa\",\n      headerStyle = list(\n        backgroundColor = \"#f8f9fa\",\n        color = \"#1a162d\",\n        fontWeight = \"bold\",\n        borderColor = \"#dfe2e5\"\n      ),\n      cellStyle = list(\n        padding = \"8px 12px\"\n      )\n    )\n  )\n\n\n\n\n\n\nCode\ncat(\"📌 Found\", nrow(quarto_tables$table_participants %&gt;% filter(lubridate::year(DATE_BIRTH) &lt; 1925 | lubridate::year(DATE_BIRTH) &gt; 2014)), \"participants with invalid age\\n\")\n\n\n📌 Found 941 participants with invalid age\n\n\nCode\ncat(\"\\n🔍 Current age standards:\\n\",\n\"- Too old: Over 100 years old\\n\",\n    \"- Too young: Under 10 years old\\n\",\n    \"- Impossible: Negative age (birth date in future)\\n\")\n\n\n\n🔍 Current age standards:\n - Too old: Over 100 years old\n - Too young: Under 10 years old\n - Impossible: Negative age (birth date in future)"
  }
]